Verzeichnisdienste stellen Informationen über beliebige Objekte bereit. Dabei kann es sich um Computer, Bildschirme oder sonstige Hardware ebenso handeln wie um Personen, Netzdienste oder Planstellen in einem Unternehmen. Zu jedem Objekt speichern sie Attribute, bei Personen beispielsweise Name, Vorname, Geburtsdatum oder eine Telefonnummer. Häufig sind die Objekte in einer hierachischen Baumstruktur angeordnet, dem so genannten DIT (Directory Information Tree). Vorbild dafür war das Daten- und Namensmodell von X.500. Im Allgemeinen setzen heutige Verzeichnisdienste allerdings auf TCP/IP auf, wohingegen X.500 auf dem ISO/OSI-Modell beruht.

Zum Zugriff auf einen Verzeichnisdienst kann das für X.500 konzipierte Zugriffsprotokoll DAP (Directory Access Protocol) dienen. Da dessen vollständige Implementierung aber äußerst komplex ist, kommt in der Praxis meist die Lightweight (LDAP) genannte Variante zum Einsatz. Sie liegt zurzeit in Version 3 vor, vereinzelt verwenden allerdings Applikationen noch die Vorgängerversion (zum Beispiel das LDAP-Modul im Apache 1.3.X). 
"Wir konnten dabei sehen, dass die Koordination und Zusammenarbeit natürlich aus Anreizen entspringt", erklärt Greg Brockman, einer der Gründer von OpenAI. Seine Organisation hat sich zum Ziel gemacht, KI-Systeme in aller Öffentlichkeit zu entwickeln und dabei dafür zu sorgen, dass sie der Menschheit nutzen. Bei Tests zeigte sich auch, dass es möglich war, einen menschlichen Spieler gegen einen der Algorithmen auszutauschen – das funktioniere in der Praxis sehr gut. "Er wurde von den anderen sehr gut unterstützt."

KI-Programme gegen Spiele und menschliche Spieler antreten zu lassen, wird in jüngster Zeit häufiger verwendet, um die Fortschritte der Technik zu messen. DeepMind, die KI-Firma der Google-Mutter Alphabet, schuf ein Programm, das in der Lage ist, das Brettspiel Go zu beherrschen und bereits Meister geschlagen hat. Mittlerweile gibt es Algorithmen, die sich Go und Schach nur dadurch beigebracht haben, dass sie das jeweilige Spiel gegen sich selbst spielten.

Azure AD B2C interagiert der Reihe nach mit Identitätsanbietern, Kunden, anderen Systemen und dem lokalen Verzeichnis, um eine Identitätsaufgabe abzuschließen. Beispiel: Anmelden eines Kunden, Registrieren eines neuen Kunden oder Zurücksetzen eines Kennworts. Die zugrunde liegende Plattform, die die Vertrauensstellung zwischen mehreren Seiten herstellt und diese Schritte ausführt, wird als Identity Experience Framework bezeichnet. Mit diesem Framework und einer Richtlinie (auch als „User Journey“ oder „Vertrauensframework-Richtlinie“ bezeichnet) werden explizit die Akteure, Aktionen, Protokolle und die Abfolge der durchzuführenden Schritte definiert.

Azure AD B2C schützt Ihre Anwendungen auf verschiedene Weise vor Denial-of-Service- und Kennwortangriffen. Azure AD B2C verwendet Erkennungs- und Abwehrmaßnahmen wie SYN-Cookies und Raten- und Verbindungsbeschränkungen, um Ressourcen vor Denial-of-Service-Angriffen zu schützen. Diese decken zudem u.a. Brute-Force-Kennwortangriffe und Wörterbuchangriffe ab.

In Azure AD B2C stellt ein Mandant Ihre Organisation dar und ist ein Verzeichnis von Benutzern. Jeder Azure AD B2C-Mandant unterscheidet sich von anderen Azure AD B2C-Mandanten und ist von diesen getrennt. Ein Mandant enthält Informationen über die Kunden, die sich zur Verwendung Ihrer Anwendung registriert haben. Dazu gehören beispielsweise Kennwörter, Profildaten und Berechtigungen.

Sie müssen Ihren Azure AD B2C-Mandanten mit Ihrem Azure-Abonnement verknüpfen, um die gesamte Funktionalität zu aktivieren und die Nutzungsgebühren zahlen zu können. Damit sich Azure AD B2C-Kunden bei Ihrer Anwendung anmelden können, müssen Sie die Anwendung in einem Azure AD B2C-Mandanten registrieren.